{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# R3. Manipulating data frames\n",
    "\n",
    "*This recitation was written by Sanjana Kulkarni with edits by Justin Bois.*\n",
    "\n",
    "<hr>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "nbsphinx": "hidden",
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Colab setup ------------------\n",
    "import os, sys, subprocess\n",
    "if \"google.colab\" in sys.modules:\n",
    "    cmd = \"pip install --upgrade watermark\"\n",
    "    process = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n",
    "    stdout, stderr = process.communicate()\n",
    "    data_path = \"https://s3.amazonaws.com/bebi103.caltech.edu/data/\"\n",
    "else:\n",
    "    data_path = \"../data/\"\n",
    "# ------------------------------"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1002\">Loading BokehJS ...</span>\n",
       "    </div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  const force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "const JS_MIME_TYPE = 'application/javascript';\n",
       "  const HTML_MIME_TYPE = 'text/html';\n",
       "  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  const CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    const script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    const cell = handle.cell;\n",
       "\n",
       "    const id = cell.output_area._bokeh_element_id;\n",
       "    const server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd_clean, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            const id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd_destroy);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    const output_area = handle.output_area;\n",
       "    const output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      const bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      const script_attrs = bk_div.children[0].attributes;\n",
       "      for (let i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      const toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    const events = require('base/js/events');\n",
       "    const OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  const NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    const el = document.getElementById(\"1002\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-2.4.3.min.js\"];\n",
       "  const css_urls = [];\n",
       "\n",
       "  const inline_js = [    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "function(Bokeh) {\n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "          for (let i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      const cell = $(document.getElementById(\"1002\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    const el = document.getElementById(\"1002\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-2.4.3.min.js\"];\n  const css_urls = [];\n\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {\n    }\n  ];\n\n  function run_inline_js() {\n    if (root.Bokeh !== undefined || force === true) {\n          for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\nif (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(\"1002\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import string\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "import scipy.optimize\n",
    "\n",
    "import bokeh.plotting\n",
    "import bokeh.io\n",
    "\n",
    "bokeh.io.output_notebook()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data from Plate Readers\n",
    "\n",
    "In this recitation, we will practice some of the reshaping techniques you have been using in your homework with another example of 96-well plate reader data. Plate readers generally output Excel files, after which the data is tediously copy-pasted into Prism (or another Excel file) for plotting and analysis. We will use various Python functions to manipulate our data into tidy format and analyze them. You can download the data files here:\n",
    "\n",
    "- [https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-1.xlsx](https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-1.xlsx)\n",
    "- [https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-2.xlsx](https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-2.xlsx)\n",
    "- [https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-3.xlsx](https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-3.xlsx)\n",
    "- [https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-4.xlsx](https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-4.xlsx)\n",
    "- [https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-5.xlsx](https://s3.amazonaws.com/bebi103.caltech.edu/data/20200117-5.xlsx)\n",
    "\n",
    "\n",
    "This data was collected by Sanjana Kulkarni and is an example of an enzyme-linked immunosorbance assay (ELISA). This assay measures the relative binding affinities between protein pairs, such as antibodies and the antigens to which they bind. The antigen is one of the surface glycoproteins of hepatitis C virus, and the antibodies are **broadly neutralizing antibodies (bNAbs)** isolated from hepatitis C virus patients. Stronger binding interactions result in higher observable fluorescence.  \n",
    "\n",
    "The plate reader measures absorbance at 450 nm because the chromogenic substrate produces a yellow-ish color when it is protonated by a strong acid. As in the homework, we are dealing with data in a 96-well format. Below is some other important information about the plate set up (with a diagram because a picture is worth a thousand words):\n",
    "\n",
    "<div style=\"width: 500px; margin: auto;\">\n",
    "    \n",
    "![plate setup](plate_setup.png)\n",
    "    \n",
    "</div>\n",
    "\n",
    "We will first make a list of antibody concentrations, which will be very handy later on. Since the concentrations are serially diluted 1:3 across the plate, we can use an exponential function in a list comprehension to do this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Units are in ng/mL\n",
    "ab_concentrations = [10000 / 3 ** i for i in range(12)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will first read in the files, and look at one of them to determine how best to extract the data set. For our purposes, we not keep the metadata, since the main purpose of this exercise is to learn about manipulating data frames. Note that in general you should keep all of the metadata you can."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 1</th>\n",
       "      <th>Unnamed: 2</th>\n",
       "      <th>Unnamed: 3</th>\n",
       "      <th>Unnamed: 4</th>\n",
       "      <th>Unnamed: 5</th>\n",
       "      <th>Unnamed: 6</th>\n",
       "      <th>Unnamed: 7</th>\n",
       "      <th>Unnamed: 8</th>\n",
       "      <th>Unnamed: 9</th>\n",
       "      <th>Unnamed: 10</th>\n",
       "      <th>Unnamed: 11</th>\n",
       "      <th>Unnamed: 12</th>\n",
       "      <th>Unnamed: 13</th>\n",
       "      <th>Unnamed: 14</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Software Version</td>\n",
       "      <td>3.08.01</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Experiment File Path:</td>\n",
       "      <td>C:\\Users\\Chou Lab\\Desktop\\Bjorkman\\Andrew\\2001...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Protocol File Path:</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Plate Number</td>\n",
       "      <td>Plate 1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Date</td>\n",
       "      <td>2020-01-17 00:00:00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Time</td>\n",
       "      <td>15:13:46</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Reader Type:</td>\n",
       "      <td>Synergy Neo2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Reader Serial Number:</td>\n",
       "      <td>1910162</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Reading Type</td>\n",
       "      <td>Reader</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Procedure Details</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Plate Type</td>\n",
       "      <td>96 WELL PLATE (Use plate lid)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Eject plate on completion</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Read</td>\n",
       "      <td>Absorbance Endpoint</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Full Plate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Wavelengths:  450</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Read Speed: Normal,  Delay: 50 msec,  Measurem...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Results</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Actual Temperature:</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2.000</td>\n",
       "      <td>3.000</td>\n",
       "      <td>4.000</td>\n",
       "      <td>5.000</td>\n",
       "      <td>6.000</td>\n",
       "      <td>7.000</td>\n",
       "      <td>8.000</td>\n",
       "      <td>9.000</td>\n",
       "      <td>10.000</td>\n",
       "      <td>11.000</td>\n",
       "      <td>12.000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>A</td>\n",
       "      <td>3.104</td>\n",
       "      <td>2.900</td>\n",
       "      <td>2.849</td>\n",
       "      <td>2.756</td>\n",
       "      <td>2.402</td>\n",
       "      <td>1.721</td>\n",
       "      <td>0.954</td>\n",
       "      <td>0.452</td>\n",
       "      <td>0.190</td>\n",
       "      <td>0.096</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.055</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>NaN</td>\n",
       "      <td>B</td>\n",
       "      <td>3.022</td>\n",
       "      <td>2.610</td>\n",
       "      <td>2.565</td>\n",
       "      <td>2.740</td>\n",
       "      <td>2.238</td>\n",
       "      <td>1.622</td>\n",
       "      <td>0.946</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.186</td>\n",
       "      <td>0.092</td>\n",
       "      <td>0.066</td>\n",
       "      <td>0.054</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "      <td>2.894</td>\n",
       "      <td>2.786</td>\n",
       "      <td>2.702</td>\n",
       "      <td>2.544</td>\n",
       "      <td>2.252</td>\n",
       "      <td>1.570</td>\n",
       "      <td>0.864</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.165</td>\n",
       "      <td>0.091</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.054</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>NaN</td>\n",
       "      <td>D</td>\n",
       "      <td>2.724</td>\n",
       "      <td>2.749</td>\n",
       "      <td>2.776</td>\n",
       "      <td>2.595</td>\n",
       "      <td>2.153</td>\n",
       "      <td>1.576</td>\n",
       "      <td>0.861</td>\n",
       "      <td>0.376</td>\n",
       "      <td>0.167</td>\n",
       "      <td>0.088</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.053</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>2.634</td>\n",
       "      <td>2.653</td>\n",
       "      <td>2.596</td>\n",
       "      <td>2.449</td>\n",
       "      <td>2.139</td>\n",
       "      <td>1.447</td>\n",
       "      <td>0.755</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.168</td>\n",
       "      <td>0.083</td>\n",
       "      <td>0.077</td>\n",
       "      <td>0.053</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>NaN</td>\n",
       "      <td>F</td>\n",
       "      <td>2.735</td>\n",
       "      <td>2.747</td>\n",
       "      <td>2.726</td>\n",
       "      <td>2.546</td>\n",
       "      <td>2.155</td>\n",
       "      <td>1.435</td>\n",
       "      <td>0.772</td>\n",
       "      <td>0.336</td>\n",
       "      <td>0.151</td>\n",
       "      <td>0.086</td>\n",
       "      <td>0.062</td>\n",
       "      <td>0.059</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>NaN</td>\n",
       "      <td>G</td>\n",
       "      <td>1.178</td>\n",
       "      <td>1.103</td>\n",
       "      <td>0.817</td>\n",
       "      <td>0.579</td>\n",
       "      <td>0.319</td>\n",
       "      <td>0.154</td>\n",
       "      <td>0.079</td>\n",
       "      <td>0.068</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.061</td>\n",
       "      <td>0.051</td>\n",
       "      <td>0.049</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>NaN</td>\n",
       "      <td>H</td>\n",
       "      <td>1.305</td>\n",
       "      <td>1.061</td>\n",
       "      <td>0.884</td>\n",
       "      <td>0.549</td>\n",
       "      <td>0.299</td>\n",
       "      <td>0.165</td>\n",
       "      <td>0.084</td>\n",
       "      <td>0.061</td>\n",
       "      <td>0.053</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.050</td>\n",
       "      <td>0.051</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Unnamed: 0  \\\n",
       "0            Software Version   \n",
       "1                         NaN   \n",
       "2       Experiment File Path:   \n",
       "3         Protocol File Path:   \n",
       "4                Plate Number   \n",
       "5                        Date   \n",
       "6                        Time   \n",
       "7                Reader Type:   \n",
       "8       Reader Serial Number:   \n",
       "9                Reading Type   \n",
       "10                        NaN   \n",
       "11          Procedure Details   \n",
       "12                 Plate Type   \n",
       "13  Eject plate on completion   \n",
       "14                       Read   \n",
       "15                        NaN   \n",
       "16                        NaN   \n",
       "17                        NaN   \n",
       "18                        NaN   \n",
       "19                    Results   \n",
       "20        Actual Temperature:   \n",
       "21                        NaN   \n",
       "22                        NaN   \n",
       "23                        NaN   \n",
       "24                        NaN   \n",
       "25                        NaN   \n",
       "26                        NaN   \n",
       "27                        NaN   \n",
       "28                        NaN   \n",
       "29                        NaN   \n",
       "30                        NaN   \n",
       "\n",
       "                                           Unnamed: 1  Unnamed: 2  Unnamed: 3  \\\n",
       "0                                             3.08.01         NaN         NaN   \n",
       "1                                                 NaN         NaN         NaN   \n",
       "2   C:\\Users\\Chou Lab\\Desktop\\Bjorkman\\Andrew\\2001...         NaN         NaN   \n",
       "3                                                 NaN         NaN         NaN   \n",
       "4                                             Plate 1         NaN         NaN   \n",
       "5                                 2020-01-17 00:00:00         NaN         NaN   \n",
       "6                                            15:13:46         NaN         NaN   \n",
       "7                                        Synergy Neo2         NaN         NaN   \n",
       "8                                             1910162         NaN         NaN   \n",
       "9                                              Reader         NaN         NaN   \n",
       "10                                                NaN         NaN         NaN   \n",
       "11                                                NaN         NaN         NaN   \n",
       "12                      96 WELL PLATE (Use plate lid)         NaN         NaN   \n",
       "13                                                NaN         NaN         NaN   \n",
       "14                                Absorbance Endpoint         NaN         NaN   \n",
       "15                                         Full Plate         NaN         NaN   \n",
       "16                                  Wavelengths:  450         NaN         NaN   \n",
       "17  Read Speed: Normal,  Delay: 50 msec,  Measurem...         NaN         NaN   \n",
       "18                                                NaN         NaN         NaN   \n",
       "19                                                NaN         NaN         NaN   \n",
       "20                                                 21         NaN         NaN   \n",
       "21                                                NaN         NaN         NaN   \n",
       "22                                                NaN       1.000       2.000   \n",
       "23                                                  A       3.104       2.900   \n",
       "24                                                  B       3.022       2.610   \n",
       "25                                                  C       2.894       2.786   \n",
       "26                                                  D       2.724       2.749   \n",
       "27                                                  E       2.634       2.653   \n",
       "28                                                  F       2.735       2.747   \n",
       "29                                                  G       1.178       1.103   \n",
       "30                                                  H       1.305       1.061   \n",
       "\n",
       "    Unnamed: 4  Unnamed: 5  Unnamed: 6  Unnamed: 7  Unnamed: 8  Unnamed: 9  \\\n",
       "0          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "1          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "2          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "3          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "4          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "5          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "6          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "7          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "8          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "9          NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "10         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "11         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "12         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "13         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "14         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "15         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "16         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "17         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "18         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "19         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "20         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "21         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "22       3.000       4.000       5.000       6.000       7.000       8.000   \n",
       "23       2.849       2.756       2.402       1.721       0.954       0.452   \n",
       "24       2.565       2.740       2.238       1.622       0.946       0.422   \n",
       "25       2.702       2.544       2.252       1.570       0.864       0.374   \n",
       "26       2.776       2.595       2.153       1.576       0.861       0.376   \n",
       "27       2.596       2.449       2.139       1.447       0.755       0.330   \n",
       "28       2.726       2.546       2.155       1.435       0.772       0.336   \n",
       "29       0.817       0.579       0.319       0.154       0.079       0.068   \n",
       "30       0.884       0.549       0.299       0.165       0.084       0.061   \n",
       "\n",
       "    Unnamed: 10  Unnamed: 11  Unnamed: 12  Unnamed: 13  Unnamed: 14  \n",
       "0           NaN          NaN          NaN          NaN          NaN  \n",
       "1           NaN          NaN          NaN          NaN          NaN  \n",
       "2           NaN          NaN          NaN          NaN          NaN  \n",
       "3           NaN          NaN          NaN          NaN          NaN  \n",
       "4           NaN          NaN          NaN          NaN          NaN  \n",
       "5           NaN          NaN          NaN          NaN          NaN  \n",
       "6           NaN          NaN          NaN          NaN          NaN  \n",
       "7           NaN          NaN          NaN          NaN          NaN  \n",
       "8           NaN          NaN          NaN          NaN          NaN  \n",
       "9           NaN          NaN          NaN          NaN          NaN  \n",
       "10          NaN          NaN          NaN          NaN          NaN  \n",
       "11          NaN          NaN          NaN          NaN          NaN  \n",
       "12          NaN          NaN          NaN          NaN          NaN  \n",
       "13          NaN          NaN          NaN          NaN          NaN  \n",
       "14          NaN          NaN          NaN          NaN          NaN  \n",
       "15          NaN          NaN          NaN          NaN          NaN  \n",
       "16          NaN          NaN          NaN          NaN          NaN  \n",
       "17          NaN          NaN          NaN          NaN          NaN  \n",
       "18          NaN          NaN          NaN          NaN          NaN  \n",
       "19          NaN          NaN          NaN          NaN          NaN  \n",
       "20          NaN          NaN          NaN          NaN          NaN  \n",
       "21          NaN          NaN          NaN          NaN          NaN  \n",
       "22        9.000       10.000       11.000       12.000          NaN  \n",
       "23        0.190        0.096        0.063        0.055        450.0  \n",
       "24        0.186        0.092        0.066        0.054        450.0  \n",
       "25        0.165        0.091        0.063        0.054        450.0  \n",
       "26        0.167        0.088        0.063        0.053        450.0  \n",
       "27        0.168        0.083        0.077        0.053        450.0  \n",
       "28        0.151        0.086        0.062        0.059        450.0  \n",
       "29        0.056        0.061        0.051        0.049        450.0  \n",
       "30        0.053        0.056        0.050        0.051        450.0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fnames = [f\"20200117-{i}.xlsx\" for i in range(1, 6)]\n",
    "\n",
    "df1 = pd.read_excel(os.path.join(data_path, fnames[0]))\n",
    "\n",
    "# Take a look\n",
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It looks like we can splice out each 96 well plate by keeping only rows 23 to the end and columns 1 to the end. This will work for any excel file taken directly from this particular BioTek plate reader. We will also convert the first column (alphabetic plate rows) to the index column to help with melting the dataframe later on. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 2</th>\n",
       "      <th>Unnamed: 3</th>\n",
       "      <th>Unnamed: 4</th>\n",
       "      <th>Unnamed: 5</th>\n",
       "      <th>Unnamed: 6</th>\n",
       "      <th>Unnamed: 7</th>\n",
       "      <th>Unnamed: 8</th>\n",
       "      <th>Unnamed: 9</th>\n",
       "      <th>Unnamed: 10</th>\n",
       "      <th>Unnamed: 11</th>\n",
       "      <th>Unnamed: 12</th>\n",
       "      <th>Unnamed: 13</th>\n",
       "      <th>Unnamed: 14</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2.000</td>\n",
       "      <td>3.000</td>\n",
       "      <td>4.000</td>\n",
       "      <td>5.000</td>\n",
       "      <td>6.000</td>\n",
       "      <td>7.000</td>\n",
       "      <td>8.000</td>\n",
       "      <td>9.000</td>\n",
       "      <td>10.000</td>\n",
       "      <td>11.000</td>\n",
       "      <td>12.000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3.104</td>\n",
       "      <td>2.900</td>\n",
       "      <td>2.849</td>\n",
       "      <td>2.756</td>\n",
       "      <td>2.402</td>\n",
       "      <td>1.721</td>\n",
       "      <td>0.954</td>\n",
       "      <td>0.452</td>\n",
       "      <td>0.190</td>\n",
       "      <td>0.096</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.055</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3.022</td>\n",
       "      <td>2.610</td>\n",
       "      <td>2.565</td>\n",
       "      <td>2.740</td>\n",
       "      <td>2.238</td>\n",
       "      <td>1.622</td>\n",
       "      <td>0.946</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.186</td>\n",
       "      <td>0.092</td>\n",
       "      <td>0.066</td>\n",
       "      <td>0.054</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2.894</td>\n",
       "      <td>2.786</td>\n",
       "      <td>2.702</td>\n",
       "      <td>2.544</td>\n",
       "      <td>2.252</td>\n",
       "      <td>1.570</td>\n",
       "      <td>0.864</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.165</td>\n",
       "      <td>0.091</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.054</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2.724</td>\n",
       "      <td>2.749</td>\n",
       "      <td>2.776</td>\n",
       "      <td>2.595</td>\n",
       "      <td>2.153</td>\n",
       "      <td>1.576</td>\n",
       "      <td>0.861</td>\n",
       "      <td>0.376</td>\n",
       "      <td>0.167</td>\n",
       "      <td>0.088</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.053</td>\n",
       "      <td>450.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0  Unnamed: 2  Unnamed: 3  Unnamed: 4  Unnamed: 5  Unnamed: 6  \\\n",
       "NaN         NaN       1.000       2.000       3.000       4.000       5.000   \n",
       "A           NaN       3.104       2.900       2.849       2.756       2.402   \n",
       "B           NaN       3.022       2.610       2.565       2.740       2.238   \n",
       "C           NaN       2.894       2.786       2.702       2.544       2.252   \n",
       "D           NaN       2.724       2.749       2.776       2.595       2.153   \n",
       "\n",
       "     Unnamed: 7  Unnamed: 8  Unnamed: 9  Unnamed: 10  Unnamed: 11  \\\n",
       "NaN       6.000       7.000       8.000        9.000       10.000   \n",
       "A         1.721       0.954       0.452        0.190        0.096   \n",
       "B         1.622       0.946       0.422        0.186        0.092   \n",
       "C         1.570       0.864       0.374        0.165        0.091   \n",
       "D         1.576       0.861       0.376        0.167        0.088   \n",
       "\n",
       "     Unnamed: 12  Unnamed: 13  Unnamed: 14  \n",
       "NaN       11.000       12.000          NaN  \n",
       "A          0.063        0.055        450.0  \n",
       "B          0.066        0.054        450.0  \n",
       "C          0.063        0.054        450.0  \n",
       "D          0.063        0.053        450.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = pd.read_excel(os.path.join(data_path, fnames[0]), skiprows=22, index_col=1)\n",
    "\n",
    "# Look at the data frame again\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Reshaping the data set\n",
    "\n",
    "The first and last columns and the first row can be removed, and we will rename the columns to be the antibody concentrations from our list. We then rename the index and the column header (the name for all of the columns) to useful labels, and we melt! "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Ab_Conc_ng_mL</th>\n",
       "      <th>10000.000000</th>\n",
       "      <th>3333.333333</th>\n",
       "      <th>1111.111111</th>\n",
       "      <th>370.370370</th>\n",
       "      <th>123.456790</th>\n",
       "      <th>41.152263</th>\n",
       "      <th>13.717421</th>\n",
       "      <th>4.572474</th>\n",
       "      <th>1.524158</th>\n",
       "      <th>0.508053</th>\n",
       "      <th>0.169351</th>\n",
       "      <th>0.056450</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Antibody</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>3.104</td>\n",
       "      <td>2.900</td>\n",
       "      <td>2.849</td>\n",
       "      <td>2.756</td>\n",
       "      <td>2.402</td>\n",
       "      <td>1.721</td>\n",
       "      <td>0.954</td>\n",
       "      <td>0.452</td>\n",
       "      <td>0.190</td>\n",
       "      <td>0.096</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>3.022</td>\n",
       "      <td>2.610</td>\n",
       "      <td>2.565</td>\n",
       "      <td>2.740</td>\n",
       "      <td>2.238</td>\n",
       "      <td>1.622</td>\n",
       "      <td>0.946</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.186</td>\n",
       "      <td>0.092</td>\n",
       "      <td>0.066</td>\n",
       "      <td>0.054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>2.894</td>\n",
       "      <td>2.786</td>\n",
       "      <td>2.702</td>\n",
       "      <td>2.544</td>\n",
       "      <td>2.252</td>\n",
       "      <td>1.570</td>\n",
       "      <td>0.864</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.165</td>\n",
       "      <td>0.091</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>2.724</td>\n",
       "      <td>2.749</td>\n",
       "      <td>2.776</td>\n",
       "      <td>2.595</td>\n",
       "      <td>2.153</td>\n",
       "      <td>1.576</td>\n",
       "      <td>0.861</td>\n",
       "      <td>0.376</td>\n",
       "      <td>0.167</td>\n",
       "      <td>0.088</td>\n",
       "      <td>0.063</td>\n",
       "      <td>0.053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E</th>\n",
       "      <td>2.634</td>\n",
       "      <td>2.653</td>\n",
       "      <td>2.596</td>\n",
       "      <td>2.449</td>\n",
       "      <td>2.139</td>\n",
       "      <td>1.447</td>\n",
       "      <td>0.755</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.168</td>\n",
       "      <td>0.083</td>\n",
       "      <td>0.077</td>\n",
       "      <td>0.053</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Ab_Conc_ng_mL  10000.000000  3333.333333   1111.111111   370.370370    \\\n",
       "Antibody                                                                \n",
       "A                     3.104         2.900         2.849         2.756   \n",
       "B                     3.022         2.610         2.565         2.740   \n",
       "C                     2.894         2.786         2.702         2.544   \n",
       "D                     2.724         2.749         2.776         2.595   \n",
       "E                     2.634         2.653         2.596         2.449   \n",
       "\n",
       "Ab_Conc_ng_mL  123.456790    41.152263     13.717421     4.572474      \\\n",
       "Antibody                                                                \n",
       "A                     2.402         1.721         0.954         0.452   \n",
       "B                     2.238         1.622         0.946         0.422   \n",
       "C                     2.252         1.570         0.864         0.374   \n",
       "D                     2.153         1.576         0.861         0.376   \n",
       "E                     2.139         1.447         0.755         0.330   \n",
       "\n",
       "Ab_Conc_ng_mL  1.524158      0.508053      0.169351      0.056450      \n",
       "Antibody                                                               \n",
       "A                     0.190         0.096         0.063         0.055  \n",
       "B                     0.186         0.092         0.066         0.054  \n",
       "C                     0.165         0.091         0.063         0.054  \n",
       "D                     0.167         0.088         0.063         0.053  \n",
       "E                     0.168         0.083         0.077         0.053  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = df1.iloc[1:, 1:-1]\n",
    "df1.columns = ab_concentrations\n",
    "\n",
    "df1.index.name = 'Antibody'\n",
    "df1.columns.name='Ab_Conc_ng_mL'\n",
    "\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we are set to reset the index and melt, preserving the the antibody column as an identifier variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Antibody</th>\n",
       "      <th>Ab_Conc_ng_mL</th>\n",
       "      <th>OD450</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>B</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>C</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>D</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.634</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Antibody Ab_Conc_ng_mL  OD450\n",
       "0        A       10000.0  3.104\n",
       "1        B       10000.0  3.022\n",
       "2        C       10000.0  2.894\n",
       "3        D       10000.0  2.724\n",
       "4        E       10000.0  2.634"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename columns -- OD450 means optical density at 450 nm\n",
    "df1 = df1.reset_index().melt(id_vars=\"Antibody\", value_name=\"OD450\")\n",
    "\n",
    "# Take a look\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Putting it all together into a function, we can tidy all three excel files and then concatenate them into a single dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def read_elisa_data(fname):\n",
    "    # Skip the first 22 rows, and make the row names to indices\n",
    "    df = pd.read_excel(fname, skiprows=22, index_col=1)\n",
    "\n",
    "    # Remove the first and last columns and the first row\n",
    "    df = df.iloc[1:, 1:-1]\n",
    "\n",
    "    # Rename the columns to antibody concentrations\n",
    "    df.columns = ab_concentrations\n",
    "\n",
    "    # Assign informative labels\n",
    "    df.index.name = \"Antibody\"\n",
    "    df.columns.name = \"Ab_Conc_ng_mL\"\n",
    "\n",
    "    # Melt! Set the new column name as OD450\n",
    "    return df.reset_index().melt(id_vars=\"Antibody\", value_name=\"OD450\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each plate has 4 different antibodies, but only one distinct antigen. In this set of experiments, there are two different hepatitis C virus strains and 2 possible mutants (in addition to wild type). The single mutants are called \"Q412R\" and \"Y527H,\" which denotes the single amino acid change in them. This information wasn't stored in the instrument, so it will be manually added to the dataframe. Gotta keep good notes in lab!\n",
    "\n",
    "I will make a dictionary mapping the plate numbers to the strain names. The plate number (1-5) will be extracted using the `rfind` method of strings, which returns the index of a particular character. Finally, we use the dictionary to get the strain names and set it to a new column called `Antigen`. We then separate the `Strain` and `Variant` (either wild-type or mutant) by splitting the string at the hyphen. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Antibody</th>\n",
       "      <th>Ab_Conc_ng_mL</th>\n",
       "      <th>OD450</th>\n",
       "      <th>Strain</th>\n",
       "      <th>Variant</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.104</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>B</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.022</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>C</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.894</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>D</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.724</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.634</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Antibody Ab_Conc_ng_mL  OD450 Strain Variant\n",
       "0        A       10000.0  3.104   1a53   Q412R\n",
       "1        B       10000.0  3.022   1a53   Q412R\n",
       "2        C       10000.0  2.894   1a53   Q412R\n",
       "3        D       10000.0  2.724   1a53   Q412R\n",
       "4        E       10000.0  2.634   1a53   Q412R"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dictionary mapping plate number to strain-variant name.\n",
    "plateIDdict = {\n",
    "    \"1\": \"1a53-Q412R\",\n",
    "    \"2\": \"1a157-Q412R\",\n",
    "    \"3\": \"1a157-Y527H\",\n",
    "    \"4\": \"1a53-WT\",\n",
    "    \"5\": \"1a157-WT\",\n",
    "}\n",
    "\n",
    "df = pd.concat(\n",
    "    [read_elisa_data(os.path.join(data_path, fn)) for fn in fnames],\n",
    "    keys=[plateIDdict[fn[fn.rfind(\"-\") + 1 : fn.rfind(\".\")]] for fn in fnames],\n",
    "    names=[\"Antigen\"],\n",
    ").reset_index(level=\"Antigen\")\n",
    "\n",
    "# Separate the strain and variant from the \"Antigen\" column\n",
    "df[[\"Strain\", \"Variant\"]] = df[\"Antigen\"].str.split(\"-\", expand=True)\n",
    "\n",
    "# Remove the \"Antigen\" column\n",
    "df = df.drop(columns=[\"Antigen\"])\n",
    "\n",
    "# Take a look at data frame\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The very last thing we need to do is rename the rows by antibody. Pairs of adjacent rows are technical replicates, and there are 4 unique antibodies in each plate. \n",
    "\n",
    "Rows A and B = HEPC74\n",
    "\n",
    "Rows C and D = HEPC74rua\n",
    "\n",
    "Rows E and F = HEPC153\n",
    "\n",
    "Rows G and H = HEPC153rua\n",
    "\n",
    "There are many ways to do this, but I made a dictionary mapping row letters to antibodies and will use it to replace the values in the `row` column of the data frame. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Antibody</th>\n",
       "      <th>Ab_Conc_ng_mL</th>\n",
       "      <th>OD450</th>\n",
       "      <th>Strain</th>\n",
       "      <th>Variant</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HEPC74</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.104</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HEPC74</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.022</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.894</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.724</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HEPC153</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.634</td>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Antibody Ab_Conc_ng_mL  OD450 Strain Variant\n",
       "0     HEPC74       10000.0  3.104   1a53   Q412R\n",
       "1     HEPC74       10000.0  3.022   1a53   Q412R\n",
       "2  HEPC74rua       10000.0  2.894   1a53   Q412R\n",
       "3  HEPC74rua       10000.0  2.724   1a53   Q412R\n",
       "4    HEPC153       10000.0  2.634   1a53   Q412R"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get string of letters (it's not difficult to write out manually, \n",
    "# but the string package is very useful in more complex cases)\n",
    "rows = string.ascii_uppercase[:8]\n",
    "antibodies = [\"HEPC74\"] * 2 + [\"HEPC74rua\"] * 2 + [\"HEPC153\"] * 2 + [\"HEPC153rua\"] * 2\n",
    "\n",
    "# Make dictionary\n",
    "ab_dict = dict(list(zip(rows, antibodies)))\n",
    "\n",
    "# Replace row names with antibodies\n",
    "df[\"Antibody\"] = df[\"Antibody\"].map(ab_dict)\n",
    "\n",
    "# Take a look at data frame\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And now we're done! Everything is tidy, so each absorbance value is associated with a single antigen, antibody, and antibody concentration. Note that the antigen concentrations are all the same (1 μg/mL) in each plate. We can take a look at the mean and standard deviation of the absorbances and verify that they make some sense and we haven't accidentally reordered things in the data frame—larger antibody concentrations are associated with larger absorbances. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Computing summary statistics\n",
    "\n",
    "You can also apply methods to groups within a data frame. This is done using the `apply()` method of a `GroupBy` object. An apply operation can take a long time with larger sets of data and many levels, so you can time how long an apply operation will take using [tqdm](https://tqdm.github.io/). The following will be helpful to get going:\n",
    "\n",
    "```python\n",
    "import tqdm\n",
    "tqdm.tqdm.pandas()\n",
    "pd.groupby([groups]).progress_apply(process_group)\n",
    "```\n",
    "\n",
    "Since we are not using the apply function (I will actually apply a logistic model later in base Python), we won't go through the details here. \n",
    "\n",
    "`agg()` takes a single function (or list of functions) that accept a `pd.Series`, `np.array`, `list`, or similar and returns a single value summarizing the input. The `groupby()` `agg()` combination will do the hard work of *agg*regating each column of each group with the function/functions passed. Consider calculating the mean and standard deviation of the absorbances)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">OD450</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Strain</th>\n",
       "      <th>Variant</th>\n",
       "      <th>Antibody</th>\n",
       "      <th>Ab_Conc_ng_mL</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1a157</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">Q412R</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">HEPC153</th>\n",
       "      <th>0.056450</th>\n",
       "      <td>0.0600</td>\n",
       "      <td>0.005657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.169351</th>\n",
       "      <td>0.0680</td>\n",
       "      <td>0.004243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.508053</th>\n",
       "      <td>0.0735</td>\n",
       "      <td>0.007778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.524158</th>\n",
       "      <td>0.1090</td>\n",
       "      <td>0.002828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.572474</th>\n",
       "      <td>0.2175</td>\n",
       "      <td>0.007778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1a53</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">WT</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">HEPC74rua</th>\n",
       "      <th>123.456790</th>\n",
       "      <td>2.3305</td>\n",
       "      <td>0.099702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370.370370</th>\n",
       "      <td>2.7750</td>\n",
       "      <td>0.022627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1111.111111</th>\n",
       "      <td>2.8730</td>\n",
       "      <td>0.066468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3333.333333</th>\n",
       "      <td>2.7795</td>\n",
       "      <td>0.170413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10000.000000</th>\n",
       "      <td>2.7730</td>\n",
       "      <td>0.261630</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>240 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         OD450          \n",
       "                                          mean       std\n",
       "Strain Variant Antibody  Ab_Conc_ng_mL                  \n",
       "1a157  Q412R   HEPC153   0.056450       0.0600  0.005657\n",
       "                         0.169351       0.0680  0.004243\n",
       "                         0.508053       0.0735  0.007778\n",
       "                         1.524158       0.1090  0.002828\n",
       "                         4.572474       0.2175  0.007778\n",
       "...                                        ...       ...\n",
       "1a53   WT      HEPC74rua 123.456790     2.3305  0.099702\n",
       "                         370.370370     2.7750  0.022627\n",
       "                         1111.111111    2.8730  0.066468\n",
       "                         3333.333333    2.7795  0.170413\n",
       "                         10000.000000   2.7730  0.261630\n",
       "\n",
       "[240 rows x 2 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_summary = df.groupby([\"Strain\", \"Variant\", \"Antibody\", \"Ab_Conc_ng_mL\"]).agg(\n",
    "    [np.mean, np.std]\n",
    ")\n",
    "\n",
    "df_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the result has a multiindex for the rows and also for the columns. We can clean this up, first by renaming the columns to have a single level, and then by resetting the row index with the `reset_index()` method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Strain</th>\n",
       "      <th>Variant</th>\n",
       "      <th>Antibody</th>\n",
       "      <th>Ab_Conc_ng_mL</th>\n",
       "      <th>OD450 mean</th>\n",
       "      <th>OD450 std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>0.056450</td>\n",
       "      <td>0.0600</td>\n",
       "      <td>0.005657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>0.169351</td>\n",
       "      <td>0.0680</td>\n",
       "      <td>0.004243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>0.508053</td>\n",
       "      <td>0.0735</td>\n",
       "      <td>0.007778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>1.524158</td>\n",
       "      <td>0.1090</td>\n",
       "      <td>0.002828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>4.572474</td>\n",
       "      <td>0.2175</td>\n",
       "      <td>0.007778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>123.456790</td>\n",
       "      <td>2.3305</td>\n",
       "      <td>0.099702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>370.370370</td>\n",
       "      <td>2.7750</td>\n",
       "      <td>0.022627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>1111.111111</td>\n",
       "      <td>2.8730</td>\n",
       "      <td>0.066468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>3333.333333</td>\n",
       "      <td>2.7795</td>\n",
       "      <td>0.170413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>10000.000000</td>\n",
       "      <td>2.7730</td>\n",
       "      <td>0.261630</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>240 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Strain Variant   Antibody  Ab_Conc_ng_mL  OD450 mean  OD450 std\n",
       "0    1a157   Q412R    HEPC153       0.056450      0.0600   0.005657\n",
       "1    1a157   Q412R    HEPC153       0.169351      0.0680   0.004243\n",
       "2    1a157   Q412R    HEPC153       0.508053      0.0735   0.007778\n",
       "3    1a157   Q412R    HEPC153       1.524158      0.1090   0.002828\n",
       "4    1a157   Q412R    HEPC153       4.572474      0.2175   0.007778\n",
       "..     ...     ...        ...            ...         ...        ...\n",
       "235   1a53      WT  HEPC74rua     123.456790      2.3305   0.099702\n",
       "236   1a53      WT  HEPC74rua     370.370370      2.7750   0.022627\n",
       "237   1a53      WT  HEPC74rua    1111.111111      2.8730   0.066468\n",
       "238   1a53      WT  HEPC74rua    3333.333333      2.7795   0.170413\n",
       "239   1a53      WT  HEPC74rua   10000.000000      2.7730   0.261630\n",
       "\n",
       "[240 rows x 6 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename the columns to get a single index\n",
    "df_summary.columns = [\" \".join(col).strip() for col in df_summary.columns]\n",
    "\n",
    "# Convert row index into columns\n",
    "df_summary = df_summary.reset_index()\n",
    "\n",
    "df_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generating plots\n",
    "\n",
    "In this experiment, we are interested in determining if the different antigen variants bind differently to the same antibody. So we will plot each antibody on a separate plot and color the antigen variants to see the dose-response curve. ELISA data is normally plotted with x axis on a log scale. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div class=\"bk-root\" id=\"9e486bf6-0f62-477c-93ac-6a1069b03c66\" data-root-id=\"1562\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "  const docs_json = {\"ecf5a1f0-dd42-4bd8-8f07-ecd4c5e4183d\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"children\":[{\"id\":\"1561\"},{\"id\":\"1559\"}]},\"id\":\"1562\",\"type\":\"Column\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1292\"},\"glyph\":{\"id\":\"1294\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1296\"},\"nonselection_glyph\":{\"id\":\"1295\"},\"view\":{\"id\":\"1298\"}},\"id\":\"1297\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"antibody concentration (ng/mL)\",\"coordinates\":null,\"formatter\":{\"id\":\"1551\"},\"group\":null,\"major_label_policy\":{\"id\":\"1552\"},\"ticker\":{\"id\":\"1412\"}},\"id\":\"1411\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1471\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1269\",\"type\":\"HelpTool\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a53, HEPC74rua\"},\"id\":\"1401\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1409\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1268\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\"],\"OD450\":{\"__ndarray__\":\"5dAi2/l+CkD0/dR46SYKQDMzMzMzMwlAJQaBlUOLCUDy0k1iEFgJQFg5tMh2vghA0SLb+X5qCEBGtvP91HgHQAwCK4cW2QRACtejcD0KBUB9PzVeukkAQJzEILByaP8/NV66SQwC8z/Xo3A9CtfxP/YoXI/C9eA/fT81XrpJ4D/RItv5fmrMP+F6FK5H4co/ObTIdr6fuj/y0k1iEFi5P1TjpZvEILA/001iEFg5tD9I4XoUrkfBP4lBYOXQIqs/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[0,1,8,9,16,17,24,25,32,33,40,41,48,49,56,57,64,65,72,73,80,81,88,89]},\"selected\":{\"id\":\"1513\"},\"selection_policy\":{\"id\":\"1512\"}},\"id\":\"1285\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1278\"},\"glyph\":{\"id\":\"1280\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1282\"},\"nonselection_glyph\":{\"id\":\"1281\"},\"view\":{\"id\":\"1284\"}},\"id\":\"1283\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1393\"},\"glyph\":{\"id\":\"1395\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1397\"},\"nonselection_glyph\":{\"id\":\"1396\"},\"view\":{\"id\":\"1399\"}},\"id\":\"1398\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1412\",\"type\":\"LogTicker\"},{\"attributes\":{\"overlay\":{\"id\":\"1028\"}},\"id\":\"1024\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\"],\"OD450\":{\"__ndarray__\":\"g8DKoUW28z+e76fGSzfxPzeJQWDl0PA/BoGVQ4ts8T/0/dR46SbpPz0K16NwPeo/L90kBoGV2z8dWmQ730/dP90kBoGVQ8s/ZDvfT42Xzj/Jdr6fGi+9PyGwcmiR7bw/i2zn+6nxsj8730+Nl26yPzm0yHa+n6o/ObTIdr6fqj/6fmq8dJOoP+kmMQisHKo/WmQ730+Npz/6fmq8dJOoP/T91HjpJrE/WmQ730+Npz9aZDvfT42nPylcj8L1KKw/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[6,7,14,15,22,23,30,31,38,39,46,47,54,55,62,63,70,71,78,79,86,87,94,95]},\"selected\":{\"id\":\"1500\"},\"selection_policy\":{\"id\":\"1499\"}},\"id\":\"1238\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1027\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1493\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1533\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1241\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1472\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1018\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1021\",\"type\":\"Grid\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1523\"},\"group\":null,\"major_label_policy\":{\"id\":\"1524\"},\"ticker\":{\"id\":\"1311\"}},\"id\":\"1310\",\"type\":\"LogAxis\"},{\"attributes\":{\"below\":[{\"id\":\"1357\"}],\"center\":[{\"id\":\"1360\"},{\"id\":\"1364\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1361\"}],\"renderers\":[{\"id\":\"1384\"},{\"id\":\"1391\"},{\"id\":\"1398\"}],\"title\":{\"id\":\"1347\"},\"toolbar\":{\"id\":\"1372\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1353\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1355\"}},\"id\":\"1346\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a53, HEPC74\"},\"id\":\"1300\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1492\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1534\",\"type\":\"AllLabels\"},{\"attributes\":{\"toolbar\":{\"id\":\"1560\"},\"toolbar_location\":\"above\"},\"id\":\"1561\",\"type\":\"ToolbarBox\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1234\",\"type\":\"Circle\"},{\"attributes\":{\"ticker\":null},\"id\":\"1536\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1278\"}},\"id\":\"1284\",\"type\":\"CDSView\"},{\"attributes\":{\"below\":[{\"id\":\"1155\"}],\"center\":[{\"id\":\"1158\"},{\"id\":\"1162\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1159\"}],\"renderers\":[{\"id\":\"1182\"},{\"id\":\"1189\"},{\"id\":\"1196\"}],\"title\":{\"id\":\"1145\"},\"toolbar\":{\"id\":\"1170\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1151\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1153\"}},\"id\":\"1144\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1237\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1397\",\"type\":\"Circle\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\"],\"OD450\":{\"__ndarray__\":\"1XjpJjEIB0C+nxov3SQHQKRwPQrXowVAzczMzMzMBUDfT42XbhIGQGZmZmZmZgZAdZMYBFYOBkBOYhBYObQEQAwCK4cW2QBAhxbZzvdTAUAK16NwPQr5P5huEoPAyvc/6SYxCKwc6j99PzVeuknoP2ZmZmZmZtY/w/UoXI/C1T8rhxbZzvfDP4PAyqFFtsM/CtejcD0Ktz8bL90kBoG1P1TjpZvEILA/aJHtfD81rj/ZzvdT46WrPzm0yHa+n6o/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[0,1,8,9,16,17,24,25,32,33,40,41,48,49,56,57,64,65,72,73,80,81,88,89]},\"selected\":{\"id\":\"1511\"},\"selection_policy\":{\"id\":\"1510\"}},\"id\":\"1278\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1396\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1537\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1019\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"LinearScale\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1548\"},\"group\":null,\"major_label_policy\":{\"id\":\"1549\"},\"ticker\":{\"id\":\"1416\"}},\"id\":\"1415\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1498\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1108\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1111\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1358\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1411\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1414\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1407\",\"type\":\"LogScale\"},{\"attributes\":{\"toolbars\":[{\"id\":\"1029\"},{\"id\":\"1123\"},{\"id\":\"1170\"},{\"id\":\"1224\"},{\"id\":\"1271\"},{\"id\":\"1325\"},{\"id\":\"1372\"},{\"id\":\"1426\"}],\"tools\":[{\"id\":\"1022\"},{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"},{\"id\":\"1027\"},{\"id\":\"1116\"},{\"id\":\"1117\"},{\"id\":\"1118\"},{\"id\":\"1119\"},{\"id\":\"1120\"},{\"id\":\"1121\"},{\"id\":\"1163\"},{\"id\":\"1164\"},{\"id\":\"1165\"},{\"id\":\"1166\"},{\"id\":\"1167\"},{\"id\":\"1168\"},{\"id\":\"1217\"},{\"id\":\"1218\"},{\"id\":\"1219\"},{\"id\":\"1220\"},{\"id\":\"1221\"},{\"id\":\"1222\"},{\"id\":\"1264\"},{\"id\":\"1265\"},{\"id\":\"1266\"},{\"id\":\"1267\"},{\"id\":\"1268\"},{\"id\":\"1269\"},{\"id\":\"1318\"},{\"id\":\"1319\"},{\"id\":\"1320\"},{\"id\":\"1321\"},{\"id\":\"1322\"},{\"id\":\"1323\"},{\"id\":\"1365\"},{\"id\":\"1366\"},{\"id\":\"1367\"},{\"id\":\"1368\"},{\"id\":\"1369\"},{\"id\":\"1370\"},{\"id\":\"1419\"},{\"id\":\"1420\"},{\"id\":\"1421\"},{\"id\":\"1422\"},{\"id\":\"1423\"},{\"id\":\"1424\"}]},\"id\":\"1560\",\"type\":\"ProxyToolbar\"},{\"attributes\":{},\"id\":\"1113\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1280\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1538\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1238\"},\"glyph\":{\"id\":\"1240\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1242\"},\"nonselection_glyph\":{\"id\":\"1241\"},\"view\":{\"id\":\"1244\"}},\"id\":\"1243\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"antibody concentration (ng/mL)\",\"coordinates\":null,\"formatter\":{\"id\":\"1536\"},\"group\":null,\"major_label_policy\":{\"id\":\"1537\"},\"ticker\":{\"id\":\"1358\"}},\"id\":\"1357\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1539\",\"type\":\"Selection\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a53, HEPC153\"},\"id\":\"1098\",\"type\":\"Title\"},{\"attributes\":{\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1395\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1319\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1240\",\"type\":\"Circle\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1341\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1496\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1281\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1233\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1235\"},\"nonselection_glyph\":{\"id\":\"1234\"},\"view\":{\"id\":\"1237\"}},\"id\":\"1236\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"ticker\":null},\"id\":\"1495\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1282\",\"type\":\"Circle\"},{\"attributes\":{\"axis_label\":\"OD450\",\"coordinates\":null,\"formatter\":{\"id\":\"1045\"},\"group\":null,\"major_label_policy\":{\"id\":\"1046\"},\"ticker\":{\"id\":\"1019\"}},\"id\":\"1018\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1382\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1022\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1235\",\"type\":\"Circle\"},{\"attributes\":{\"below\":[{\"id\":\"1310\"}],\"center\":[{\"id\":\"1313\"},{\"id\":\"1317\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1314\"}],\"renderers\":[{\"id\":\"1337\"},{\"id\":\"1344\"}],\"title\":{\"id\":\"1300\"},\"toolbar\":{\"id\":\"1325\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1306\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1308\"}},\"id\":\"1299\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"1393\"}},\"id\":\"1399\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1106\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1308\",\"type\":\"LinearScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1270\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1242\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1540\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1464\"},\"group\":null,\"major_label_policy\":{\"id\":\"1465\"},\"ticker\":{\"id\":\"1113\"}},\"id\":\"1112\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1294\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1104\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1497\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1541\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1116\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\"],\"OD450\":{\"__ndarray__\":\"okW28/3UCECTGARWDi0IQDMzMzMzMwdA4XoUrkfhBECYbhKDwMoGQIXrUbgehQRAPzVeukkMBkDsUbgehesFQJ7vp8ZLNwNAgZVDi2znAUDwp8ZLN4n7P8HKoUW28/k/ukkMAiuH7j8Sg8DKoUXuPyGwcmiR7dw/NV66SQwC2z9SuB6F61HIPwIrhxbZzsc/+n5qvHSTuD9aZDvfT423P1TjpZvEILA/TDeJQWDlsD8pXI/C9SisP9nO91Pjpas/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[0,1,8,9,16,17,24,25,32,33,40,41,48,49,56,57,64,65,72,73,80,81,88,89]},\"selected\":{\"id\":\"1526\"},\"selection_policy\":{\"id\":\"1525\"}},\"id\":\"1332\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1112\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1115\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1238\"}},\"id\":\"1244\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1295\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1467\"},\"group\":null,\"major_label_policy\":{\"id\":\"1468\"},\"ticker\":{\"id\":\"1109\"}},\"id\":\"1108\",\"type\":\"LogAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1296\",\"type\":\"Circle\"},{\"attributes\":{\"axis\":{\"id\":\"1310\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1313\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1311\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1318\",\"type\":\"PanTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1109\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1314\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1317\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1383\",\"type\":\"Circle\"},{\"attributes\":{\"tools\":[{\"id\":\"1264\"},{\"id\":\"1265\"},{\"id\":\"1266\"},{\"id\":\"1267\"},{\"id\":\"1268\"},{\"id\":\"1269\"}]},\"id\":\"1271\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1542\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1315\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"1292\"}},\"id\":\"1298\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\"],\"OD450\":{\"__ndarray__\":\"46WbxCCwB0BiEFg5tMgIQMUgsHJokQhAbxKDwMqhCEBEi2zn+6kIQNNNYhBYOQhAaJHtfD81CEB9PzVeukkHQNEi2/l+agRAMQisHFpkBECcxCCwcmj/P7TIdr6fGv8/UI2XbhKD8j/HSzeJQWDxP+xRuB6F6+E/sHJoke183z8lBoGVQ4vMPz0K16NwPco/6SYxCKwcuj/y0k1iEFi5P/yp8dJNYrA/WDm0yHa+rz+JQWDl0CKrPzm0yHa+n6o/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\"],\"index\":[0,1,8,9,16,17,24,25,32,33,40,41,48,49,56,57,64,65,72,73,80,81,88,89]},\"selected\":{\"id\":\"1515\"},\"selection_policy\":{\"id\":\"1514\"}},\"id\":\"1292\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1543\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1025\",\"type\":\"SaveTool\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1520\"},\"group\":null,\"major_label_policy\":{\"id\":\"1521\"},\"ticker\":{\"id\":\"1315\"}},\"id\":\"1314\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1306\",\"type\":\"LogScale\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a157, HEPC74rua\"},\"id\":\"1347\",\"type\":\"Title\"},{\"attributes\":{\"tools\":[{\"id\":\"1022\"},{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"},{\"id\":\"1027\"}]},\"id\":\"1029\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1510\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1511\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1500\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1512\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1513\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1514\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1515\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1499\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1055\"}},\"id\":\"1061\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1122\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1077\",\"type\":\"Circle\"},{\"attributes\":{\"tools\":[{\"id\":\"1116\"},{\"id\":\"1117\"},{\"id\":\"1118\"},{\"id\":\"1119\"},{\"id\":\"1120\"},{\"id\":\"1121\"}]},\"id\":\"1123\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\"],\"OD450\":{\"__ndarray__\":\"6SYxCKwcCEDfT42XbhIIQO58PzVeugdASgwCK4cWCEDufD81XroGQN0kBoGVQwdA7nw/NV66BUBkO99PjZcFQPLSTWIQWAJAQmDl0CLbAkC4HoXrUbj6P/yp8dJNYvo/pHA9Ctej7D+iRbbz/dTsP/T91HjpJtk/8tJNYhBY2T9qvHSTGATGP7pJDAIrh8Y/CtejcD0Ktz8Sg8DKoUW2P1TjpZvEILA/WDm0yHa+rz+JQWDl0CKrPzm0yHa+n6o/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\"],\"index\":[4,5,12,13,20,21,28,29,36,37,44,45,52,53,60,61,68,69,76,77,84,85,92,93]},\"selected\":{\"id\":\"1094\"},\"selection_policy\":{\"id\":\"1093\"}},\"id\":\"1075\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"WT\"},\"renderers\":[{\"id\":\"1060\"}]},\"id\":\"1074\",\"type\":\"LegendItem\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1055\"},\"glyph\":{\"id\":\"1057\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1059\"},\"nonselection_glyph\":{\"id\":\"1058\"},\"view\":{\"id\":\"1061\"}},\"id\":\"1060\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1058\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1548\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1057\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1059\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1549\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\"],\"OD450\":{\"__ndarray__\":\"30+Nl24SBUDhehSuR+EFQNNNYhBYOQVAYOXQItv5BUD4U+Olm8QEQAIrhxbZzgVAZDvfT42XA0CR7Xw/NV4EQOkmMQisHAFAPQrXo3A9AUD0/dR46Sb3P/YoXI/C9fY/KVyPwvUo6D9OYhBYObToPx+F61G4HtU/Gy/dJAaB1T8bL90kBoHFP4cW2c73U8M/c2iR7Xw/tT9qvHSTGAS2P4PAyqFFtrM/WDm0yHa+rz+JQWDl0CKrP2iR7Xw/Na4/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[4,5,12,13,20,21,28,29,36,37,44,45,52,53,60,61,68,69,76,77,84,85,92,93]},\"selected\":{\"id\":\"1470\"},\"selection_policy\":{\"id\":\"1469\"}},\"id\":\"1130\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1213\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1216\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1324\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1214\",\"type\":\"BasicTicker\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1492\"},\"group\":null,\"major_label_policy\":{\"id\":\"1493\"},\"ticker\":{\"id\":\"1214\"}},\"id\":\"1213\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1222\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1218\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1217\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1261\",\"type\":\"BasicTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1223\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1257\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis_label\":\"OD450\",\"coordinates\":null,\"formatter\":{\"id\":\"1533\"},\"group\":null,\"major_label_policy\":{\"id\":\"1534\"},\"ticker\":{\"id\":\"1362\"}},\"id\":\"1361\",\"type\":\"LinearAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"1223\"}},\"id\":\"1219\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"1357\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1360\",\"type\":\"Grid\"},{\"attributes\":{\"overlay\":{\"id\":\"1270\"}},\"id\":\"1266\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1220\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1221\",\"type\":\"ResetTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1371\"}},\"id\":\"1367\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1336\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"HelpTool\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\"],\"OD450\":{\"__ndarray__\":\"UrgehetR2D9xPQrXo3DVP42XbhKDwMo/TmIQWDm0yD+oxks3iUHAP9Ei2/l+arw/i2zn+6nxsj+LbOf7qfGyP8l2vp8aL60/aJHtfD81rj/ZzvdT46WrP5qZmZmZmak/VOOlm8QgsD/6fmq8dJOoP/p+arx0k6g/WmQ730+Npz+q8dJNYhCoP6rx0k1iEKg/CtejcD0Kpz+q8dJNYhCoP1pkO99Pjac/mpmZmZmZqT+JQWDl0CKrP6rx0k1iEKg/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[6,7,14,15,22,23,30,31,38,39,46,47,54,55,62,63,70,71,78,79,86,87,94,95]},\"selected\":{\"id\":\"1485\"},\"selection_policy\":{\"id\":\"1484\"}},\"id\":\"1184\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1285\"}},\"id\":\"1291\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1187\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1285\"},\"glyph\":{\"id\":\"1287\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1289\"},\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1291\"}},\"id\":\"1290\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1508\"},\"group\":null,\"major_label_policy\":{\"id\":\"1509\"},\"ticker\":{\"id\":\"1257\"}},\"id\":\"1256\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1509\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1264\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"1361\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1364\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1180\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"1177\"}},\"id\":\"1183\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\"],\"OD450\":{\"__ndarray__\":\"CtejcD0K+T8GgZVDi2z5PzEIrBxaZPU/vp8aL90k9j++nxov3STyPz81XrpJDPI/vp8aL90k6j8j2/l+arzoP1pkO99Pjd8/K4cW2c732z9oke18PzXOP3npJjEIrMw/0SLb+X5qvD9KDAIrhxa5P+xRuB6F67E/VOOlm8QgsD85tMh2vp+qPzm0yHa+n6o/eekmMQisrD9SuB6F61G4PwrXo3A9Cqc/CtejcD0Kpz9aZDvfT42nPwrXo3A9Cqc/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\"],\"index\":[6,7,14,15,22,23,30,31,38,39,46,47,54,55,62,63,70,71,78,79,86,87,94,95]},\"selected\":{\"id\":\"1487\"},\"selection_policy\":{\"id\":\"1486\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"OD450\",\"coordinates\":null,\"formatter\":{\"id\":\"1505\"},\"group\":null,\"major_label_policy\":{\"id\":\"1506\"},\"ticker\":{\"id\":\"1261\"}},\"id\":\"1260\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1267\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1506\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1332\"}},\"id\":\"1338\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1265\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\",\"HEPC74\"],\"OD450\":{\"__ndarray__\":\"8KfGSzeJCUASg8DKoUUKQCUGgZVDiwpAxSCwcmiRCEAQWDm0yHYIQFTjpZvEIAhAiUFg5dAiCECwcmiR7XwHQPCnxks3iQRAvp8aL90kBEAnMQisHFoAQLpJDAIrh/4/6SYxCKwc8j+Nl24Sg8DwP8l2vp8aL+E/uB6F61G43j99PzVeuknMP+kmMQisHMo/mpmZmZmZuT+iRbbz/dS4P5zEILByaLE/CKwcWmQ7rz+JQWDl0CKrP+kmMQisHKo/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[0,1,8,9,16,17,24,25,32,33,40,41,48,49,56,57,64,65,72,73,80,81,88,89]},\"selected\":{\"id\":\"1528\"},\"selection_policy\":{\"id\":\"1527\"}},\"id\":\"1339\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"1324\"}},\"id\":\"1320\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"tools\":[{\"id\":\"1217\"},{\"id\":\"1218\"},{\"id\":\"1219\"},{\"id\":\"1220\"},{\"id\":\"1221\"},{\"id\":\"1222\"}]},\"id\":\"1224\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1520\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1184\"},\"glyph\":{\"id\":\"1186\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1188\"},\"nonselection_glyph\":{\"id\":\"1187\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1332\"},\"glyph\":{\"id\":\"1334\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1336\"},\"nonselection_glyph\":{\"id\":\"1335\"},\"view\":{\"id\":\"1338\"}},\"id\":\"1337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1521\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1321\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1323\",\"type\":\"HelpTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"1523\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"tools\":[{\"id\":\"1318\"},{\"id\":\"1319\"},{\"id\":\"1320\"},{\"id\":\"1321\"},{\"id\":\"1322\"},{\"id\":\"1323\"}]},\"id\":\"1325\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1186\",\"type\":\"Circle\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1233\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1524\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1343\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1177\"},\"glyph\":{\"id\":\"1179\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1181\"},\"nonselection_glyph\":{\"id\":\"1180\"},\"view\":{\"id\":\"1183\"}},\"id\":\"1182\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"1260\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1263\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1181\",\"type\":\"Circle\"},{\"attributes\":{\"source\":{\"id\":\"1339\"}},\"id\":\"1345\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1288\",\"type\":\"Circle\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1334\",\"type\":\"Circle\"},{\"attributes\":{\"axis\":{\"id\":\"1256\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1259\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1525\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1322\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1335\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1339\"},\"glyph\":{\"id\":\"1341\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1343\"},\"nonselection_glyph\":{\"id\":\"1342\"},\"view\":{\"id\":\"1345\"}},\"id\":\"1344\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1188\",\"type\":\"Circle\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\"],\"OD450\":{\"__ndarray__\":\"DAIrhxbZ8j/hehSuR+H0P9nO91PjpfE/YOXQItv58D++nxov3STqP30/NV66Sew/ukkMAiuH4j/FILByaJHhP9Ei2/l+atQ/iUFg5dAi0z+DwMqhRbbDPx+F61G4HsU/001iEFg5tD8bL90kBoG1P5zEILByaLE/CKwcWmQ7rz956SYxCKysP4lBYOXQIqs/CKwcWmQ7rz956SYxCKysP+kmMQisHKo/mpmZmZmZqT9KDAIrhxapP+kmMQisHKo/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[6,7,14,15,22,23,30,31,38,39,46,47,54,55,62,63,70,71,78,79,86,87,94,95]},\"selected\":{\"id\":\"1498\"},\"selection_policy\":{\"id\":\"1497\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1526\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1289\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1505\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1342\",\"type\":\"Circle\"},{\"attributes\":{\"source\":{\"id\":\"1184\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"1508\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1381\",\"type\":\"Circle\"},{\"attributes\":{\"ticker\":null},\"id\":\"1467\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1433\"}},\"id\":\"1439\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1163\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"1155\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1158\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1134\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1465\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1205\",\"type\":\"LogScale\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1440\"},\"glyph\":{\"id\":\"1442\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1444\"},\"nonselection_glyph\":{\"id\":\"1443\"},\"view\":{\"id\":\"1446\"}},\"id\":\"1445\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1207\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1468\",\"type\":\"AllLabels\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1156\",\"type\":\"LogTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1425\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a53, HEPC153rua\"},\"id\":\"1199\",\"type\":\"Title\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1442\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1166\",\"type\":\"SaveTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1169\"}},\"id\":\"1165\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"children\":[[{\"id\":\"1003\"},0,0],[{\"id\":\"1097\"},0,1],[{\"id\":\"1144\"},1,0],[{\"id\":\"1198\"},1,1],[{\"id\":\"1245\"},2,0],[{\"id\":\"1299\"},2,1],[{\"id\":\"1346\"},3,0],[{\"id\":\"1400\"},3,1]]},\"id\":\"1559\",\"type\":\"GridBox\"},{\"attributes\":{},\"id\":\"1168\",\"type\":\"HelpTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1436\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1164\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis_label\":\"OD450\",\"coordinates\":null,\"formatter\":{\"id\":\"1477\"},\"group\":null,\"major_label_policy\":{\"id\":\"1478\"},\"ticker\":{\"id\":\"1160\"}},\"id\":\"1159\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1167\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis\":{\"id\":\"1159\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1162\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1160\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1194\",\"type\":\"Circle\"},{\"attributes\":{\"tools\":[{\"id\":\"1163\"},{\"id\":\"1164\"},{\"id\":\"1165\"},{\"id\":\"1166\"},{\"id\":\"1167\"},{\"id\":\"1168\"}]},\"id\":\"1170\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1197\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1440\"}},\"id\":\"1446\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1169\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1470\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1133\",\"type\":\"Circle\"},{\"attributes\":{\"below\":[{\"id\":\"1256\"}],\"center\":[{\"id\":\"1259\"},{\"id\":\"1263\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1260\"}],\"renderers\":[{\"id\":\"1283\"},{\"id\":\"1290\"},{\"id\":\"1297\"}],\"title\":{\"id\":\"1246\"},\"toolbar\":{\"id\":\"1271\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1252\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1254\"}},\"id\":\"1245\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\"],\"OD450\":{\"__ndarray__\":\"WDm0yHa+B0Dl0CLb+X4IQJMYBFYOLQdAxSCwcmiRB0CR7Xw/NV4HQDm0yHa+nwZAsp3vp8ZLBkAtsp3vp8YEQFYOLbKd7wJAIbByaJHtAUBg5dAi2/n6P05iEFg5tPg/2/l+arx06z8tsp3vp8brP1g5tMh2vtc/YhBYObTI1j/P91PjpZvEPycxCKwcWsQ/WmQ730+Ntz9zaJHtfD+1P7gehetRuK4/uB6F61G4rj8ZBFYOLbKtP2iR7Xw/Na4/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[4,5,12,13,20,21,28,29,36,37,44,45,52,53,60,61,68,69,76,77,84,85,92,93]},\"selected\":{\"id\":\"1472\"},\"selection_policy\":{\"id\":\"1471\"}},\"id\":\"1137\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1210\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1469\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1444\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1130\"},\"glyph\":{\"id\":\"1132\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1134\"},\"nonselection_glyph\":{\"id\":\"1133\"},\"view\":{\"id\":\"1136\"}},\"id\":\"1135\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\",\"HEPC153rua\"],\"OD450\":{\"__ndarray__\":\"g8DKoUW29T9GtvP91Hj1P0w3iUFg5fA/NV66SQwC8T9CYOXQItvlP8dLN4lBYOU/EoPAyqFF1j+4HoXrUbjWP3e+nxov3cQ/f2q8dJMYxD+yne+nxku3Pxsv3SQGgbU//Knx0k1isD8IrBxaZDuvP3npJjEIrKw/KVyPwvUorD9oke18PzWuP0oMAiuHFqk/mpmZmZmZqT8pXI/C9SisP5qZmZmZmak/mpmZmZmZqT9KDAIrhxapP9nO91Pjpas/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[6,7,14,15,22,23,30,31,38,39,46,47,54,55,62,63,70,71,78,79,86,87,94,95]},\"selected\":{\"id\":\"1483\"},\"selection_policy\":{\"id\":\"1482\"}},\"id\":\"1177\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1195\",\"type\":\"Circle\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1179\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1495\"},\"group\":null,\"major_label_policy\":{\"id\":\"1496\"},\"ticker\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"LogAxis\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1433\"},\"glyph\":{\"id\":\"1435\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1437\"},\"nonselection_glyph\":{\"id\":\"1436\"},\"view\":{\"id\":\"1439\"}},\"id\":\"1438\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1193\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1195\"},\"nonselection_glyph\":{\"id\":\"1194\"},\"view\":{\"id\":\"1197\"}},\"id\":\"1196\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\"],\"OD450\":{\"__ndarray__\":\"RIts5/upB0BOYhBYObQEQDMzMzMzMwdAEoPAyqFFBUBcj8L1KFwHQM/3U+OlmwZAhxbZzvdTBkDfT42XbhIGQGiR7Xw/NQNAFK5H4XoUAkAK16NwPQr7P1K4HoXrUfg/Gy/dJAaB7T+F61G4HoXrP5HtfD81Xto/ppvEILBy2D8Sg8DKoUXGP8P1KFyPwsU/qvHSTWIQuD9qvHSTGAS2P2iR7Xw/Na4/aJHtfD81rj/pJjEIrByqP5qZmZmZmak/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[2,3,10,11,18,19,26,27,34,35,42,43,50,51,58,59,66,67,74,75,82,83,90,91]},\"selected\":{\"id\":\"1556\"},\"selection_policy\":{\"id\":\"1555\"}},\"id\":\"1440\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1130\"}},\"id\":\"1136\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1464\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"1209\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1212\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1437\",\"type\":\"Circle\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1132\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1443\",\"type\":\"Circle\"},{\"attributes\":{\"ticker\":null},\"id\":\"1551\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1072\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1071\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1552\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1477\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1527\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1528\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"1480\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1553\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1554\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1137\"}},\"id\":\"1143\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1039\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1119\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1139\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1555\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1137\"},\"glyph\":{\"id\":\"1139\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1141\"},\"nonselection_glyph\":{\"id\":\"1140\"},\"view\":{\"id\":\"1143\"}},\"id\":\"1142\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1478\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1556\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1481\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1193\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1078\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1140\",\"type\":\"Circle\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\"],\"OD450\":{\"__ndarray__\":\"9ihcj8L1CUBaZDvfT40IQC/dJAaBlQhALbKd76fGCUBcj8L1KFwIQPCnxks3iQhAx0s3iUFgBkBYObTIdr4GQK5H4XoUrgJATmIQWDm0AkDhehSuR+H6P0w3iUFg5fo/tMh2vp8a6z/wp8ZLN4npPwIrhxbZztc/EFg5tMh21j8bL90kBoHFPycxCKwcWsQ/ukkMAiuHtj/D9Shcj8K1P1TjpZvEILA//Knx0k1isD+JQWDl0CKrP4lBYOXQIqs/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[4,5,12,13,20,21,28,29,36,37,44,45,52,53,60,61,68,69,76,77,84,85,92,93]},\"selected\":{\"id\":\"1072\"},\"selection_policy\":{\"id\":\"1071\"}},\"id\":\"1055\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1075\"}},\"id\":\"1081\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1120\",\"type\":\"ResetTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1122\"}},\"id\":\"1118\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"1036\"}},\"id\":\"1042\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"Q412R\"},\"renderers\":[{\"id\":\"1041\"}]},\"id\":\"1054\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1040\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1075\"},\"glyph\":{\"id\":\"1077\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1079\"},\"nonselection_glyph\":{\"id\":\"1078\"},\"view\":{\"id\":\"1081\"}},\"id\":\"1080\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1093\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#2ca02c\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#2ca02c\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#2ca02c\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1079\",\"type\":\"Circle\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"items\":[{\"id\":\"1054\"},{\"id\":\"1074\"},{\"id\":\"1096\"}],\"location\":\"top_left\"},\"id\":\"1053\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1094\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"Y527H\"},\"renderers\":[{\"id\":\"1080\"}]},\"id\":\"1096\",\"type\":\"LegendItem\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1036\"},\"glyph\":{\"id\":\"1038\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1040\"},\"nonselection_glyph\":{\"id\":\"1039\"},\"view\":{\"id\":\"1042\"}},\"id\":\"1041\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1287\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1141\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1121\",\"type\":\"HelpTool\"},{\"attributes\":{\"below\":[{\"id\":\"1411\"}],\"center\":[{\"id\":\"1414\"},{\"id\":\"1418\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1415\"}],\"renderers\":[{\"id\":\"1438\"},{\"id\":\"1445\"}],\"title\":{\"id\":\"1401\"},\"toolbar\":{\"id\":\"1426\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1407\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1409\"}},\"id\":\"1400\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\",\"HEPC153\"],\"OD450\":{\"__ndarray__\":\"lkOLbOf7BkB1kxgEVg4HQG3n+6nx0gVARIts5/upBUBKDAIrhxYEQAaBlUOLbARA6SYxCKwcAkBKDAIrhxYCQK5H4XoUrvs/mG4Sg8DK+z/4U+Olm8TwP/7UeOkmMfA/tvP91Hjp3j+0yHa+nxrfP4lBYOXQIss/JQaBlUOLzD/RItv5fmq8PzEIrBxaZLs/nMQgsHJosT/TTWIQWDm0P5MYBFYOLbI/pHA9CtejsD/8qfHSTWKwP3npJjEIrKw/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[4,5,12,13,20,21,28,29,36,37,44,45,52,53,60,61,68,69,76,77,84,85,92,93]},\"selected\":{\"id\":\"1051\"},\"selection_policy\":{\"id\":\"1050\"}},\"id\":\"1036\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1117\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1483\",\"type\":\"Selection\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1028\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1050\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"below\":[{\"id\":\"1209\"}],\"center\":[{\"id\":\"1212\"},{\"id\":\"1216\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1213\"}],\"renderers\":[{\"id\":\"1236\"},{\"id\":\"1243\"}],\"title\":{\"id\":\"1199\"},\"toolbar\":{\"id\":\"1224\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1205\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1207\"}},\"id\":\"1198\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1484\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"below\":[{\"id\":\"1108\"}],\"center\":[{\"id\":\"1111\"},{\"id\":\"1115\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1112\"}],\"renderers\":[{\"id\":\"1135\"},{\"id\":\"1142\"}],\"title\":{\"id\":\"1098\"},\"toolbar\":{\"id\":\"1123\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1104\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1106\"}},\"id\":\"1097\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a157, HEPC74\"},\"id\":\"1246\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1482\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1010\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1051\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1015\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1008\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis\":{\"id\":\"1014\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1017\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1012\",\"type\":\"LinearScale\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1048\"},\"group\":null,\"major_label_policy\":{\"id\":\"1049\"},\"ticker\":{\"id\":\"1015\"}},\"id\":\"1014\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1006\",\"type\":\"DataRange1d\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a157, HEPC153rua\"},\"id\":\"1145\",\"type\":\"Title\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"1a157, HEPC153\"},\"id\":\"1004\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1254\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1485\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1153\",\"type\":\"LinearScale\"},{\"attributes\":{\"ticker\":null},\"id\":\"1048\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1252\",\"type\":\"LogScale\"},{\"attributes\":{\"below\":[{\"id\":\"1014\"}],\"center\":[{\"id\":\"1017\"},{\"id\":\"1021\"},{\"id\":\"1053\"}],\"frame_height\":200,\"frame_width\":200,\"left\":[{\"id\":\"1018\"}],\"renderers\":[{\"id\":\"1041\"},{\"id\":\"1060\"},{\"id\":\"1080\"}],\"title\":{\"id\":\"1004\"},\"toolbar\":{\"id\":\"1029\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1006\"},\"x_scale\":{\"id\":\"1010\"},\"y_range\":{\"id\":\"1008\"},\"y_scale\":{\"id\":\"1012\"}},\"id\":\"1003\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1480\"},\"group\":null,\"major_label_policy\":{\"id\":\"1481\"},\"ticker\":{\"id\":\"1156\"}},\"id\":\"1155\",\"type\":\"LogAxis\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1371\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\"],\"OD450\":{\"__ndarray__\":\"NV66SQwCB0CR7Xw/NV4HQE5iEFg5tAZAXI/C9ShcB0B1kxgEVg4HQIcW2c73UwdAd76fGi/dBkB56SYxCKwGQJZDi2zn+wJApHA9CtejA0B56SYxCKz8P+XQItv5fvw/3SQGgZVD7z9oke18PzXwP9V46SYxCNw/DAIrhxbZ3j+q8dJNYhDIP1K4HoXrUcg/WmQ730+Ntz9KDAIrhxa5P7gehetRuK4/CKwcWmQ7rz/pJjEIrByqP5qZmZmZmak/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\",\"Y527H\"],\"index\":[2,3,10,11,18,19,26,27,34,35,42,43,50,51,58,59,66,67,74,75,82,83,90,91]},\"selected\":{\"id\":\"1543\"},\"selection_policy\":{\"id\":\"1542\"}},\"id\":\"1393\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"tools\":[{\"id\":\"1365\"},{\"id\":\"1366\"},{\"id\":\"1367\"},{\"id\":\"1368\"},{\"id\":\"1369\"},{\"id\":\"1370\"}]},\"id\":\"1372\",\"type\":\"Toolbar\"},{\"attributes\":{\"tools\":[{\"id\":\"1419\"},{\"id\":\"1420\"},{\"id\":\"1421\"},{\"id\":\"1422\"},{\"id\":\"1423\"},{\"id\":\"1424\"}]},\"id\":\"1426\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1424\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1419\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"1415\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1418\",\"type\":\"Grid\"},{\"attributes\":{\"overlay\":{\"id\":\"1425\"}},\"id\":\"1421\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1422\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1420\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1423\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\"],\"OD450\":{\"__ndarray__\":\"UrgehetRCUBqvHSTGAQKQGiR7Xw/NQhARIts5/upCEBt5/up8dIHQO58PzVeughARIts5/upBkCe76fGSzcHQEa28/3UeANA+FPjpZvEA0CuR+F6FK77P9Ei2/l+avw/bxKDwMqh7T8IrBxaZDvvPzvfT42Xbto/ObTIdr6f2j+6SQwCK4fGPw4tsp3vp8Y/ukkMAiuHtj+6SQwCK4e2P2iR7Xw/Na4/aJHtfD81rj+JQWDl0CKrP5qZmZmZmak/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\"],\"index\":[2,3,10,11,18,19,26,27,34,35,42,43,50,51,58,59,66,67,74,75,82,83,90,91]},\"selected\":{\"id\":\"1541\"},\"selection_policy\":{\"id\":\"1540\"}},\"id\":\"1386\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1389\",\"type\":\"Circle\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\"],\"OD450\":{\"__ndarray__\":\"9P3UeOkmB0CYbhKDwMoFQH0/NV66SQZAy6FFtvP9BUAEVg4tsp0FQGiR7Xw/NQZAJzEIrBxaBEDD9Shcj8IEQGq8dJMYBAJA001iEFg5AUAfhetRuB75P57vp8ZLN/k/2c73U+Ol6z9aZDvfT43rP1YOLbKd79c/qvHSTWIQ2D8fhetRuB7FP8dLN4lBYMU/sp3vp8ZLtz+6SQwCK4e2P1TjpZvEILA/VOOlm8QgsD/ZzvdT46WrP4lBYOXQIqs/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\",\"1a53\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[2,3,10,11,18,19,26,27,34,35,42,43,50,51,58,59,66,67,74,75,82,83,90,91]},\"selected\":{\"id\":\"1554\"},\"selection_policy\":{\"id\":\"1553\"}},\"id\":\"1433\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"Ab_Conc_ng_mL\":[10000.0,10000.0,3333.3333333333335,3333.3333333333335,1111.111111111111,1111.111111111111,370.3703703703704,370.3703703703704,123.45679012345678,123.45679012345678,41.1522633744856,41.1522633744856,13.717421124828531,13.717421124828531,4.572473708276178,4.572473708276178,1.5241579027587258,1.5241579027587258,0.5080526342529086,0.5080526342529086,0.16935087808430288,0.16935087808430288,0.056450292694767625,0.056450292694767625],\"Antibody\":[\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\",\"HEPC74rua\"],\"OD450\":{\"__ndarray__\":\"mpmZmZmZBUAj2/l+arwGQPLSTWIQWAVAcT0K16NwBkDufD81XroEQLKd76fGSwVAEoPAyqFFA0CF61G4HoUDQEoMAiuHFv0/2/l+arx0/T+amZmZmZnxPxKDwMqhRfI/SOF6FK5H4T9KDAIrhxbhP7gehetRuM4/sHJoke18zz8hsHJoke28P2iR7Xw/Nb4/kxgEVg4tsj9Ei2zn+6mxP3npJjEIrKw/CKwcWmQ7rz/pJjEIrByqP+kmMQisHKo/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"Strain\":[\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\",\"1a157\"],\"Variant\":[\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\",\"Q412R\"],\"index\":[2,3,10,11,18,19,26,27,34,35,42,43,50,51,58,59,66,67,74,75,82,83,90,91]},\"selected\":{\"id\":\"1539\"},\"selection_policy\":{\"id\":\"1538\"}},\"id\":\"1379\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1435\",\"type\":\"Circle\"},{\"attributes\":{\"source\":{\"id\":\"1379\"}},\"id\":\"1385\",\"type\":\"CDSView\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1379\"},\"glyph\":{\"id\":\"1381\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1383\"},\"nonselection_glyph\":{\"id\":\"1382\"},\"view\":{\"id\":\"1385\"}},\"id\":\"1384\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1386\"},\"glyph\":{\"id\":\"1388\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1390\"},\"nonselection_glyph\":{\"id\":\"1389\"},\"view\":{\"id\":\"1392\"}},\"id\":\"1391\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1386\"}},\"id\":\"1392\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1388\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#ff7f0e\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#ff7f0e\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#ff7f0e\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1390\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1416\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1486\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1487\",\"type\":\"Selection\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"hatch_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"Ab_Conc_ng_mL\"},\"y\":{\"field\":\"OD450\"}},\"id\":\"1038\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"1049\",\"type\":\"AllLabels\"}],\"root_ids\":[\"1562\"]},\"title\":\"Bokeh Application\",\"version\":\"2.4.3\"}};\n",
       "  const render_items = [{\"docid\":\"ecf5a1f0-dd42-4bd8-8f07-ecd4c5e4183d\",\"root_ids\":[\"1562\"],\"roots\":{\"1562\":\"9e486bf6-0f62-477c-93ac-6a1069b03c66\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    let attempts = 0;\n",
       "    const timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1562"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plots = []\n",
    "for i, ((antibody, strain), g) in enumerate(df.groupby([\"Antibody\", \"Strain\"])):\n",
    "    # Kwargs for setting up figure\n",
    "    fig_kwargs = dict(\n",
    "        frame_width=200,\n",
    "        frame_height=200,\n",
    "        x_axis_type=\"log\",\n",
    "        title=f\"{strain}, {antibody}\",\n",
    "    )\n",
    "\n",
    "    # Only label axes needed for clarity\n",
    "    if i > 5:\n",
    "        fig_kwargs[\"x_axis_label\"] = \"antibody concentration (ng/mL)\"\n",
    "    if i % 2 == 0:\n",
    "        fig_kwargs[\"y_axis_label\"] = \"OD450\"\n",
    "\n",
    "    p = bokeh.plotting.figure(**fig_kwargs)\n",
    "\n",
    "    # Populate glyphs, adding legend to first plot only\n",
    "    for color, (variant, sub_g) in zip(\n",
    "        bokeh.palettes.Category10_3, g.groupby(\"Variant\")\n",
    "    ):\n",
    "        kwargs = dict(source=sub_g, x=\"Ab_Conc_ng_mL\", y=\"OD450\", color=color)\n",
    "        if i == 0:\n",
    "            kwargs[\"legend_label\"] = variant\n",
    "\n",
    "        p.circle(**kwargs)\n",
    "\n",
    "    # Connect the axes\n",
    "    if i == 0:\n",
    "        p.legend.location = \"top_left\"\n",
    "    else:\n",
    "        p.x_range = plots[0].x_range\n",
    "        p.y_range = plots[0].y_range\n",
    "\n",
    "    plots.append(p)\n",
    "    \n",
    "bokeh.io.show(bokeh.layouts.gridplot(plots, ncols=2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Estimation of the EC50\n",
    "\n",
    "From ELISA data, we also typically want the half maximal effective concentration, or **EC50**. It tells you how much antibody concentration you need to reach half of the maximum OD450. This is typically accomplished by obtaining a maximum likelihood estimate (MLE) of parameters of a Hill function,\n",
    "\n",
    "\\begin{align}\n",
    "y = d + \\frac{a-d}{1 + \\left(\\frac{x}{c} \\right)^b}.\n",
    "\\end{align}\n",
    "\n",
    "The function has an inverse that can be used to compute the EC50 from the MLE parameters.\n",
    "\n",
    "\\begin{align}\n",
    "x = c \\left(\\frac{y - a}{d - y}\\right)^{1/b}\n",
    "\\end{align}\n",
    "\n",
    "This is a phenomenological approach widely used in the field (but not something Justin recommends). In the functions below, we compute the MLE. We will visit MLE in depth later in the term; for now, take this calculation as a given and as a way to demonstrate application groupby operations.\n",
    "\n",
    "Importantly, the function `compute_ec50()` takes as arguments x-values and y-values, performs a MLE, and then returns the resulting EC50."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def four_param_hill(x, a, b, c, d):\n",
    "    \"\"\"Code up the above 4-parameter Hill function\"\"\"\n",
    "    return d + (a - d) / (1 + (x / c) ** b)\n",
    "\n",
    "\n",
    "def inverse_four_param_hill(y, a, b, c, d):\n",
    "    \"\"\"Inverse of the four parameter fit in order to compute concentration from absorbance\"\"\"\n",
    "    return c * ((y - a) / (d - y)) ** (1 / b)\n",
    "\n",
    "\n",
    "def compute_ec50(x, y):\n",
    "    # Perform the fit using scipy and save the optimal parameters (popt)\n",
    "    popt, _ = scipy.optimize.curve_fit(four_param_hill, x, y)\n",
    "\n",
    "    # Compute the expected values from the logistic regression\n",
    "    fit = np.array(four_param_hill(x, *popt))\n",
    "\n",
    "    # Compute the half maximal value in order to find the EC50\n",
    "    halfway = (np.min(fit) + np.max(fit)) / 2\n",
    "    ec50 = inverse_four_param_hill(halfway, *popt)\n",
    "\n",
    "    return ec50"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We wish to compute the EC50 for each strain/variant/antibody combination. To do so, we group by through three variables and apply the `compute_ec50()` function. Any function we wish to apply needs to take a group (a sub-data frame) as an argument. So, we can write a lambda function to call `compute_ec50()`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Strain  Variant  Antibody  \n",
       "1a157   Q412R    HEPC153         80.001006\n",
       "                 HEPC153rua    1191.675372\n",
       "                 HEPC74          37.760899\n",
       "                 HEPC74rua       63.641514\n",
       "        WT       HEPC153         40.358598\n",
       "                 HEPC153rua    3353.090439\n",
       "                 HEPC74          26.682280\n",
       "                 HEPC74rua       33.763760\n",
       "        Y527H    HEPC153         34.673164\n",
       "                 HEPC153rua     391.143463\n",
       "                 HEPC74          24.829800\n",
       "                 HEPC74rua       27.293204\n",
       "1a53    Q412R    HEPC153         36.874215\n",
       "                 HEPC153rua     509.791763\n",
       "                 HEPC74          30.436994\n",
       "                 HEPC74rua       33.391581\n",
       "        WT       HEPC153         36.111559\n",
       "                 HEPC153rua     599.556263\n",
       "                 HEPC74          27.502282\n",
       "                 HEPC74rua       31.517034\n",
       "dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ec50_results = df.groupby([\"Strain\", \"Variant\", \"Antibody\"]).apply(\n",
    "    lambda group: compute_ec50(group[\"Ab_Conc_ng_mL\"].values, group[\"OD450\"].values)\n",
    ")\n",
    "\n",
    "# Take a look\n",
    "ec50_results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The result is a Pandas series with a multiindex. We can convert this to a data frame by resetting the index, and then sort by strain and antibody for convenience."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Strain</th>\n",
       "      <th>Variant</th>\n",
       "      <th>Antibody</th>\n",
       "      <th>EC50</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>80.001006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1a157</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>40.358598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Y527H</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>34.673164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153rua</td>\n",
       "      <td>1191.675372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1a157</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC153rua</td>\n",
       "      <td>3353.090439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Y527H</td>\n",
       "      <td>HEPC153rua</td>\n",
       "      <td>391.143463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC74</td>\n",
       "      <td>37.760899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1a157</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74</td>\n",
       "      <td>26.682280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Y527H</td>\n",
       "      <td>HEPC74</td>\n",
       "      <td>24.829800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>63.641514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1a157</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>33.763760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1a157</td>\n",
       "      <td>Y527H</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>27.293204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>36.874215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC153</td>\n",
       "      <td>36.111559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC153rua</td>\n",
       "      <td>509.791763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC153rua</td>\n",
       "      <td>599.556263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC74</td>\n",
       "      <td>30.436994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74</td>\n",
       "      <td>27.502282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1a53</td>\n",
       "      <td>Q412R</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>33.391581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1a53</td>\n",
       "      <td>WT</td>\n",
       "      <td>HEPC74rua</td>\n",
       "      <td>31.517034</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Strain Variant    Antibody         EC50\n",
       "0   1a157   Q412R     HEPC153    80.001006\n",
       "4   1a157      WT     HEPC153    40.358598\n",
       "8   1a157   Y527H     HEPC153    34.673164\n",
       "1   1a157   Q412R  HEPC153rua  1191.675372\n",
       "5   1a157      WT  HEPC153rua  3353.090439\n",
       "9   1a157   Y527H  HEPC153rua   391.143463\n",
       "2   1a157   Q412R      HEPC74    37.760899\n",
       "6   1a157      WT      HEPC74    26.682280\n",
       "10  1a157   Y527H      HEPC74    24.829800\n",
       "3   1a157   Q412R   HEPC74rua    63.641514\n",
       "7   1a157      WT   HEPC74rua    33.763760\n",
       "11  1a157   Y527H   HEPC74rua    27.293204\n",
       "12   1a53   Q412R     HEPC153    36.874215\n",
       "16   1a53      WT     HEPC153    36.111559\n",
       "13   1a53   Q412R  HEPC153rua   509.791763\n",
       "17   1a53      WT  HEPC153rua   599.556263\n",
       "14   1a53   Q412R      HEPC74    30.436994\n",
       "18   1a53      WT      HEPC74    27.502282\n",
       "15   1a53   Q412R   HEPC74rua    33.391581\n",
       "19   1a53      WT   HEPC74rua    31.517034"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Set the name of the series\n",
    "ec50_results.name = \"EC50\"\n",
    "\n",
    "# Convert to data frame and sort\n",
    "ec50_results.reset_index().sort_values(by=[\"Strain\", \"Antibody\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We've almost completely recreated the ELISA plotting in <a href=\"https://www.graphpad.com/how-to-buy/\" target=\"_blank\">Prism</a>, a common subscription software used by biologists to plot all sorts of data. We also didn't have to copy and paste columns and rows from Excel over and over again.\n",
    "\n",
    "In EC50 values, we are interested in the smaller numbers because they indicate that LESS antibody was required to achieve the same signal. It appears that our mutants have a mix of larger and smaller EC50 values relative to the wild-type strains. \n",
    "\n",
    "We could also plot the regression lines on the same plots with the points to do a visual test of the EC50 estimates. We do not do this here, opting instead to wait for the discussion on MLE and visualization of the results later in the course."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Computing Environment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python implementation: CPython\n",
      "Python version       : 3.9.13\n",
      "IPython version      : 7.31.1\n",
      "\n",
      "numpy     : 1.21.5\n",
      "scipy     : 1.7.3\n",
      "pandas    : 1.4.4\n",
      "bokeh     : 2.4.3\n",
      "jupyterlab: 3.4.4\n",
      "\n"
     ]
    }
   ],
   "source": [
    "%load_ext watermark\n",
    "%watermark -v -p numpy,scipy,pandas,bokeh,jupyterlab"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
